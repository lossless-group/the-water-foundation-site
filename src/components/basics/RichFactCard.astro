---
export interface Props {
  title: string;
  value: string;
  subtitle: string;
  status: 'Critical' | 'Severe' | 'Opportunity';
  source: string;
  icon: string;
  colorScheme: 'red' | 'orange' | 'yellow' | 'purple' | 'green' | 'cyan';
}

const { title, value, subtitle, status, source, icon, colorScheme } = Astro.props;

// Color scheme mapping
const colorMap = {
  red: {
    bg: 'from-red-500/20 to-red-600/20',
    bgHover: 'hover:from-red-500/25 hover:to-red-600/25',
    border: 'border-red-400/30',
    borderHover: 'hover:border-red-400/40',
    shadow: 'hover:shadow-red-500/25',
    text: 'text-red-300',
    textMuted: 'text-red-200',
    textSource: 'text-red-300/70',
    iconBg: 'bg-red-500/30',
    iconColor: 'text-red-300',
    statusBg: 'bg-red-500/30',
    statusText: 'text-red-200',
    statusBorder: 'border-red-400/50',
    floating1: 'bg-red-400/40',
    floating2: 'bg-red-400/30'
  },
  orange: {
    bg: 'from-orange-500/20 to-orange-600/20',
    bgHover: 'hover:from-orange-500/25 hover:to-orange-600/25',
    border: 'border-orange-400/30',
    borderHover: 'hover:border-orange-400/40',
    shadow: 'hover:shadow-orange-500/25',
    text: 'text-orange-300',
    textMuted: 'text-orange-200',
    textSource: 'text-orange-300/70',
    iconBg: 'bg-orange-500/30',
    iconColor: 'text-orange-300',
    statusBg: 'bg-orange-500/30',
    statusText: 'text-orange-200',
    statusBorder: 'border-orange-400/50',
    floating1: 'bg-orange-400/40',
    floating2: 'bg-orange-400/30'
  },
  yellow: {
    bg: 'from-yellow-500/20 to-yellow-600/20',
    bgHover: 'hover:from-yellow-500/25 hover:to-yellow-600/25',
    border: 'border-yellow-400/30',
    borderHover: 'hover:border-yellow-400/40',
    shadow: 'hover:shadow-yellow-500/25',
    text: 'text-yellow-300',
    textMuted: 'text-yellow-200',
    textSource: 'text-yellow-300/70',
    iconBg: 'bg-yellow-500/30',
    iconColor: 'text-yellow-300',
    statusBg: 'bg-yellow-500/30',
    statusText: 'text-yellow-200',
    statusBorder: 'border-yellow-400/50',
    floating1: 'bg-yellow-400/40',
    floating2: 'bg-yellow-400/30'
  },
  purple: {
    bg: 'from-purple-500/20 to-purple-600/20',
    bgHover: 'hover:from-purple-500/25 hover:to-purple-600/25',
    border: 'border-purple-400/30',
    borderHover: 'hover:border-purple-400/40',
    shadow: 'hover:shadow-purple-500/25',
    text: 'text-purple-300',
    textMuted: 'text-purple-200',
    textSource: 'text-purple-300/70',
    iconBg: 'bg-purple-500/30',
    iconColor: 'text-purple-300',
    statusBg: 'bg-purple-500/30',
    statusText: 'text-purple-200',
    statusBorder: 'border-purple-400/50',
    floating1: 'bg-purple-400/40',
    floating2: 'bg-purple-400/30'
  },
  green: {
    bg: 'from-green-500/20 to-green-600/20',
    bgHover: 'hover:from-green-500/25 hover:to-green-600/25',
    border: 'border-green-400/30',
    borderHover: 'hover:border-green-400/40',
    shadow: 'hover:shadow-green-500/25',
    text: 'text-green-300',
    textMuted: 'text-green-200',
    textSource: 'text-green-300/70',
    iconBg: 'bg-green-500/30',
    iconColor: 'text-green-300',
    statusBg: 'bg-green-500/30',
    statusText: 'text-green-200',
    statusBorder: 'border-green-400/50',
    floating1: 'bg-green-400/40',
    floating2: 'bg-green-400/30'
  },
  cyan: {
    bg: 'from-cyan-500/20 to-cyan-600/20',
    bgHover: 'hover:from-cyan-500/25 hover:to-cyan-600/25',
    border: 'border-cyan-400/30',
    borderHover: 'hover:border-cyan-400/40',
    shadow: 'hover:shadow-cyan-500/25',
    text: 'text-cyan-300',
    textMuted: 'text-cyan-200',
    textSource: 'text-cyan-300/70',
    iconBg: 'bg-cyan-500/30',
    iconColor: 'text-cyan-300',
    statusBg: 'bg-cyan-500/30',
    statusText: 'text-cyan-200',
    statusBorder: 'border-cyan-400/50',
    floating1: 'bg-cyan-400/40',
    floating2: 'bg-cyan-400/30'
  }
};

const colors = colorMap[colorScheme];
---

<div class="group relative">
  <div class={`bg-gradient-to-br ${colors.bg} backdrop-blur-xl ${colors.border} rounded-2xl p-8 h-full transform transition-all duration-500 hover:scale-105 ${colors.bgHover} ${colors.borderHover} hover:shadow-2xl ${colors.shadow}`}>
    
    <!-- Header with Icon and Status -->
    <div class="flex items-center justify-between mb-6">
      <div class={`w-12 h-12 ${colors.iconBg} rounded-xl flex items-center justify-center`}>
        <div class={`w-6 h-6 ${colors.iconColor}`} set:html={icon}></div>
      </div>
      <span class={`px-3 py-1 ${colors.statusBg} ${colors.statusText} text-sm font-semibold rounded-full border ${colors.statusBorder}`}>
        {status}
      </span>
    </div>
    
    <!-- Content -->
    <h3 class="text-xl font-bold text-white mb-3">{title}</h3>
    <p class={`text-3xl font-bold ${colors.text} mb-2`}>{value}</p>
    <p class={`${colors.textMuted} text-sm`}>{subtitle}</p>
    
    <!-- Source -->
    <div class="mt-4 pt-4 border-t border-white/20">
      <p class={`text-xs ${colors.textSource}`}>{source}</p>
    </div>
  </div>
  
  <!-- Floating Elements -->
  <div class={`absolute -top-2 -right-2 w-4 h-4 ${colors.floating1} rounded-full animate-pulse`}></div>
  <div class={`absolute -bottom-2 -left-2 w-3 h-3 ${colors.floating2} rounded-full animate-pulse`} style="animation-delay: 1s;"></div>
</div>
