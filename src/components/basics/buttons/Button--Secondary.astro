---
export interface Props {
    href: string;
    text: string;
    external?: boolean;
    variant?: 'solid' | 'transparent';
    className?: string;
}

const { 
    href, 
    text, 
    external = false, 
    variant = 'solid',
    className = ""
} = Astro.props;

const baseClasses = "inline-flex items-center justify-center px-8 py-4 rounded-lg font-semibold text-base transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2";

const solidClasses = "bg-secondary-100 text-secondary-900 hover:bg-secondary-200 focus:ring-secondary-500 border border-secondary-300 shadow-md hover:shadow-lg";
const transparentClasses = "bg-transparent text-secondary-700 border-2 border-secondary-400 hover:bg-secondary-100 hover:text-secondary-900 focus:ring-secondary-500 shadow-md hover:shadow-lg";

const variantClasses = variant === 'solid' ? solidClasses : transparentClasses;
---

<a
    href={href}
    class={`${baseClasses} ${variantClasses} ${className}`}
    target={external ? "_blank" : undefined}
    rel={external ? "noopener noreferrer" : undefined}
>
    {text}
    {external && (
        <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
        </svg>
    )}
</a>
