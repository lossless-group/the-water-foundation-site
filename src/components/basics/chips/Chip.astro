---
type ChipVariant = 'default' | 'success' | 'info' | 'warning' | 'error' | 'hope' | 'animated';

export interface Props {
  variant?: ChipVariant;
  class?: string;
  children: any;
}

const { variant = 'default', class: className = '', children } = Astro.props;

const variantClasses: Record<ChipVariant, string> = {
  default: 'bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200',
  success: 'bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300',
  info: 'bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300',
  warning: 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-700 dark:text-yellow-300',
  error: 'bg-red-100 dark:bg-red-900/30 text-red-700 dark:text-red-300',
  hope: 'bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300',
  animated: 'bg-gradient-to-r from-blue-400 to-purple-500 text-white animate-gradient-x bg-[length:200%_auto]',
};

const baseClasses = 'inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium';
---

<span class:list={[baseClasses, variantClasses[variant], className]}>
  <slot>{children}</slot>
</span>
