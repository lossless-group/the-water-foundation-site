---
// src/components/ui/ThemeImage.astro

interface Props {
  lightSrc: string;
  darkSrc?: string;
  alt: string;
  width?: string | number;
  height?: string | number;
  class?: string;
  loading?: 'eager' | 'lazy';
}

const {
  lightSrc,
  darkSrc,
  alt,
  width,
  height,
  class: className = '',
  loading = 'lazy'
} = Astro.props as Props;

const hasDarkVariant = !!darkSrc && darkSrc !== lightSrc;

// Helper to safely convert to string attributes
const attr = (value?: string | number) => 
  value !== undefined ? String(value) : undefined;
---

<picture>
  {hasDarkVariant && (
    <source
      srcset={darkSrc}
      media="(prefers-color-scheme: dark)"
      width={attr(width)}
      height={attr(height)}
    />
  )}
  <img
    src={lightSrc}
    alt={alt}
    class:list={['light-image', className]}
    loading={loading}
    width={attr(width)}
    height={attr(height)}
  />
  {hasDarkVariant && (
    <img
      src={darkSrc}
      alt={alt}
      class:list={['dark-image', 'hidden', className]}
      loading={loading}
      width={attr(width)}
      height={attr(height)}
    />
  )}
</picture>

<style>
  /* Handle both system preferences and manual dark mode */
  .dark .light-image,
  .dark-source {
    display: none;
  }
  
  .dark .dark-image {
    display: block !important;
  }
  
  /* Fallback for system preference */
  @media (prefers-color-scheme: dark) {
    :not(.light) .light-image {
      display: none;
    }
    :not(.light) .dark-image {
      display: block !important;
    }
  }
  
  /* Add transition for smooth fade-in */
  .light-image,
  .dark-image {
    transition: opacity 0.2s ease-in-out;
  }
</style>
