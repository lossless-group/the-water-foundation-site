---
// src/components/ui/ThemeImage.astro

interface Props {
  lightSrc: string;
  darkSrc?: string;
  alt: string;
  className?: string;
  class?: string;
  loading?: 'eager' | 'lazy';
  width?: number | string;
  height?: number | string;
  decoding?: 'sync' | 'async' | 'auto';
  fetchpriority?: 'high' | 'low' | 'auto';
}

const props = Astro.props as Props;
const lightSrc = props.lightSrc;
const darkSrc = props.darkSrc || lightSrc; // Fallback to lightSrc if darkSrc not provided
const alt = props.alt;
const className = props.className || props.class || '';
const loading = props.loading || 'lazy';
const width = props.width || '100%';
const height = props.height || 'auto';
const decoding = props.decoding || 'async';
const fetchpriority = props.fetchpriority || 'auto';
---

<div class="theme-image-container relative w-full h-full" class:list={[className]}>
  <!-- Light mode image (hidden in dark mode) -->
  <img
    src={lightSrc}
    alt={alt}
    loading={loading}
    width={width}
    height={height}
    decoding={decoding}
    fetchpriority={fetchpriority}
    class:list={[
      'light-image object-contain max-h-full max-w-full',
    ]}
  />
  
  <!-- Dark mode image (hidden in light mode) -->
  <img
    src={darkSrc}
    alt={alt}
    loading={loading}
    width={width}
    height={height}
    decoding={decoding}
    fetchpriority={fetchpriority}
    class:list={[
      'dark-image object-contain max-h-full max-w-full',
    ]}
  />
</div>

<style is:global>
  .theme-image-container {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  /* Default: light image visible */
  .light-image { display: block; }
  .dark-image { display: none; }

  /* Swap in dark mode via data attribute */
  html[data-mode="dark"] .light-image { display: none; }
  html[data-mode="dark"] .dark-image { display: block; }

  /* Also support Tailwind's .dark class on html */
  html.dark .light-image { display: none; }
  html.dark .dark-image { display: block; }

  /* Smooth transitions (optional) */
  .light-image, .dark-image { transition: opacity 0.2s ease-in-out; }
</style>
