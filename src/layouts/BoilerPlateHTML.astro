---
import OpenGraph from '../components/seo/OpenGraph.astro';

export interface Props {
  title: string;
  description: string;
  themeClass: string;
  favicon?: string;
  ogImage?: string;
  ogImagePortrait?: string;
  ogType?: 'website' | 'article';
}

const { 
  title, 
  description, 
  themeClass, 
  favicon = 'favicon__The-Water-Foundation.svg',
  ogImage = '/og_image--The-Water-Foundation_vnt1.jpg',
  ogImagePortrait = '/og_image--The-Water-Foundation_vnt1--Portrait.jpg',
  ogType = 'website'
} = Astro.props;

// Get initial theme mode from cookies or system preference
const initialTheme = 'dark'; // Default to dark theme

---

<html lang="en" class={themeClass} data-mode={initialTheme}>
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href={favicon || "/favicon.svg"} />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<OpenGraph 
      title={title}
      description={description}
      imageLandscape={ogImage}
      imagePortrait={ogImagePortrait}
      type={ogType}
      url={Astro.url.pathname}
    />
		
		<!-- Google Fonts -->
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&family=Nunito:wght@300;400;700&family=Quicksand:wght@300;400;700&family=Fira+Code:wght@400;700&display=swap" rel="stylesheet">
		
		<!-- Adobe Fonts (for ITC Avant Garde) -->
		<!-- Replace 'your-kit-id' with your actual Adobe Fonts kit ID -->
		<!-- <link rel="stylesheet" href="https://use.typekit.net/your-kit-id.css"> -->

		<!-- GSAP & ScrollTrigger -->
		<script src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/ScrollTrigger.min.js"></script>
	</head>
	<body>
		<slot />

    <script is:inline>
      // Early mode application to avoid FOUC; do not write to localStorage here.
      (function() {
        const savedMode = localStorage.getItem('mode');
        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const mode = savedMode || 'dark';
        const html = document.documentElement;
        if (mode === 'dark') {
          html.setAttribute('data-mode', 'dark');
          html.classList.add('dark');
        } else {
          html.removeAttribute('data-mode');
          html.classList.remove('dark');
        }
        // React to system changes only when no stored preference exists.
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
          if (!localStorage.getItem('mode')) {
            const newMode = e.matches ? 'dark' : 'light';
            if (newMode === 'dark') {
              html.setAttribute('data-mode', 'dark');
              html.classList.add('dark');
            } else {
              html.removeAttribute('data-mode');
              html.classList.remove('dark');
            }
          }
        });
      })();
    </script>
    <script type="module">
      import '/src/utils/mode-switcher.js';
    </script>
	</body>
</html>