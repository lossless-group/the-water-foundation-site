---
// Import necessary components and utilities
import type { GetStaticPaths } from 'astro';
import OneSlideDeck from '../../layouts/OneSlideDeck.astro';
import SlideShowVariant1 from '../../components/slides/astro-decks/variant-1/SlideShow--Variant-1.astro';
import { loadMarkdownSlides } from '../../utils/loadMarkdownSlides';
import { componentDecks } from '../../data/componentDecks';

// Define the shape of our component props
interface SlideDeckProps {
  slideshow: string;
  title: string;
  description: string;
}

// Generate static paths for Astro's static site generation
export const getStaticPaths = (): { params: { slug: string }, props: SlideDeckProps }[] => {
  return Object.entries(componentDecks).map(([slug, meta]) => ({
    params: { slug },
    props: { 
      slideshow: slug,
      title: meta.title,
      description: meta.description
    }
  }));
};

// Get the current props from Astro
const { slideshow, title, description } = Astro.props as SlideDeckProps;

// Try to load markdown if not an Astro component
let markdownContent: string | null = null;
if (!(slideshow in componentDecks)) {
  markdownContent = await loadMarkdownSlides(slideshow);
}
---

{markdownContent ? (
  <OneSlideDeck title={slideshow} description="">
    <section data-markdown>
      <script type="text/template">
        {markdownContent}
      </script>
    </section>
  </OneSlideDeck>
) : slideshow in componentDecks ? (
  componentDecks[slideshow].component === 'SlideShowVariant1' ? (
    <OneSlideDeck title={title} description={description}>
      <SlideShowVariant1 
        title={title}
        subtitle={description}
        author="The Water Fund Team"
      />
    </OneSlideDeck>
  ) : (
    <OneSlideDeck title={title} description={description}>
      <section data-background-color="rgb(var(--color-primary-950))">
        <h1 style="color: rgb(var(--color-primary-50));">Welcome to TWF Slides</h1>
        <p style="color: rgb(var(--color-primary-200));">
          Powered by RevealJS and Water Theme
        </p>
      </section>
    </OneSlideDeck>
  )
) : (
  <OneSlideDeck title="Not Found" description="">
    <section>
      <h1>Slide deck not found</h1>
      <p>The requested slide deck could not be found.</p>
    </section>
  </OneSlideDeck>
)}
