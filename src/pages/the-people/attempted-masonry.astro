---
// 1. Imports
import { Fragment } from 'astro/jsx-runtime';
import BaseThemeLayout from '@layouts/BaseThemeLayout.astro';
import PersonCard from '@components/team/PersonCard.astro';
import PersonCardSmall from '@components/team/PersonCardSmall.astro';
import WhoWeAreTimeline from '@layouts/sections/who-we-are/WhoWeAreTimeline.astro';
import ProposeYourself from '@layouts/sections/propose-yourself/ProposeYourself.astro';

// 2. Type Definitions
interface TeamMember {
  name: string;
  role: string;
  classifiers: string;
  image: string;
  bio: string;
  socialLinks: Array<{
    name: string;
    href: string;
    icon: string;
  }>;
}

interface TeamSection {
  title: string;
  classifier: string;
  useSmallCard: boolean;
}

// 3. Team Data
const teamSections: TeamSection[] = [
  { 
    title: "Managing Partners", 
    classifier: "Managing Partner",
    useSmallCard: false
  },
  { 
    title: "Founding Team", 
    classifier: "Founding Principal",
    useSmallCard: true
  },
  { 
    title: "Advisory Board", 
    classifier: "Founding Advisor",
    useSmallCard: true
  },
  { 
    title: "Vertical Partners", 
    classifier: "Vertical Partner",
    useSmallCard: true
  },
  { 
    title: "Philanthropy Team", 
    classifier: "Philanthropies",
    useSmallCard: true
  },
  { 
    title: "Visiting Fellows", 
    classifier: "Visiting Fellow",
    useSmallCard: true
  },
  { 
    title: "Trustees", 
    classifier: "Trustee",
    useSmallCard: false
  }
];


// Import team members from JSON file
import teamData from '../../content/people/team.json';

const teamMembers = teamData;


if (import.meta.env.DEV && teamMembers.length === 0) {
  console.warn('No team members found. The grid will be empty.');
}

// 5. Helper Functions
function groupByClassifier(members: TeamMember[], classifier: string): TeamMember[] {
  return members.filter(member => 
    member.classifiers && member.classifiers.includes(classifier)
  );
}
---


<BaseThemeLayout
  ogImage="/ogImageLandscape__The-Water-Foundation.jpg"
  ogImagePortrait="/ogImagePortrait__The-Water-Foundation.jpg"
  title="The People of The Water Foundation"
  description="Meet the passionate individuals working tirelessly to bring water resilience to 1 billion people."
>
  <main class="min-h-screen bg-gradient-to-b from-background to-background/50">
    <!-- Hero Section -->
    <section class="relative pt-20 pb-16 md:pt-24 md:pb-20 bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 overflow-hidden">
      <div class="relative z-10 container mx-auto px-4 text-center">
        <h1 class="text-5xl md:text-6xl font-extralight text-white mb-6 tracking-wider leading-tight">Our People</h1>
        <div class="w-32 h-px bg-gradient-to-r from-transparent via-white to-transparent mx-auto mb-8 opacity-60"></div>
        <p class="text-xl md:text-2xl text-white/90 max-w-4xl mx-auto leading-relaxed font-light">
          Meet the passionate individuals working tirelessly to bring water resilience to 1 billion people.
        </p>
      </div>
    </section>

    <!-- Masonry Grid Layout -->
    <section class="py-12">
      <div class="container mx-auto px-4">
        <div class="masonry-grid">
          {!teamMembers || teamMembers.length === 0 ? (
            <div class="masonry-item w-full text-center py-8">
              <p class="text-gray-500">No team members found.</p>
            </div>
          ) : teamSections.flatMap((section) => {
            
            const sectionMembers = groupByClassifier(teamMembers, section.classifier);
            if (sectionMembers.length === 0) return [];
            
            return [
              // Section header
              <h2 class="masonry-header">
                {section.title}
              </h2>,
              // Team members
              ...sectionMembers.map((member) => (
                <div class="masonry-item">
                  {section.useSmallCard ? (
                    <PersonCardSmall {...member} maxWords={15} />
                  ) : (
                    <PersonCard {...member} />
                  )}
                </div>
              ))
            ];
          })}
        </div>
      </div>
    </section>

    <style>
      /* Ensure images maintain aspect ratio */
      .masonry-item img {
        width: 100%;
        height: auto;
        border-radius: 0.5rem;
        transition: transform 0.3s ease;
      }

      /* Card hover effects */
      .masonry-item > div {
        transition: all 0.3s ease;
        height: 100%;
        background: var(--card-bg, #fff);
        border-radius: 0.75rem;
        overflow: hidden;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      }

      .masonry-item:hover > div {
        transform: translateY(-4px);
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
      }

      /* Grid container */
      .masonry-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
        width: 100%;
        max-width: 1440px;
        margin: 0 auto;
        padding: 0 2rem;
      }
      
      /* Grid items */
      .masonry-item {
        width: 100%;
        transition: transform 0.2s ease-in-out;
      }
      
      /* Card container */
      .masonry-item > article {
        display: flex;
        flex-direction: column;
        height: 100%;
      }
      
      /* Ensure images stay contained */
      .masonry-item img {
        width: 100%;
        height: auto;
        object-fit: cover;
      }
      
      /* Section headers */
      .masonry-header {
        grid-column: 1 / -1;
        margin: 3rem 0 1rem;
        color: var(--color-foreground);
        font-size: 1.75rem;
        font-weight: 300;
        padding-bottom: 0.5rem;
        position: relative;
      }
      
      .masonry-header:first-child {
        margin-top: 0;
      }
      
      .masonry-header:after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 3rem;
        height: 2px;
        background: linear-gradient(90deg, var(--color-primary), transparent);
      }
      
      /* Responsive columns */
      @media (min-width: 640px) {
        .masonry-grid {
          grid-template-columns: repeat(2, minmax(300px, 1fr));
        }
      }
      
      @media (min-width: 1024px) {
        .masonry-grid {
          grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        }
        
        .masonry-header {
          font-size: 2rem;
        }
      }
    </style>

    <WhoWeAreTimeline />
    <ProposeYourself />
  </main>
</BaseThemeLayout>

<style>
  /* Water theme specific styles */
  :global(html[data-theme="water"]) {
    --color-primary: 14 116 144;  /* Cyan-700 */
    --color-primary-foreground: 255 255 255;
    --color-background: 240 249 255;  /* Light blue-50 */
    --color-foreground: 3 7 18;  /* Gray-950 */
    --color-border: 224 242 254;  /* Light blue-100 */
  }
  
  /* Dark mode overrides */
  :global(html[data-theme="water"].dark) {
    --color-primary: 8 145 178;  /* Cyan-600 */
    --color-background: 8 47 73;  /* Dark blue-950 */
    --color-foreground: 248 250 252;  /* Slate-50 */
    --color-border: 30 58 138;  /* Blue-900 */
  }

  /* Smooth scrolling for section headers */
  h2 {
    scroll-margin-top: 2rem;
  }
</style>